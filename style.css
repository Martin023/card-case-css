/* setting up custon properties */

:root {
    --crl-neutral-900:hsl(207, 19%, 9%);
    --crl-neutral-100:hsl(0, 0%, 100%);
    --crl-accent-400:hsl(142, 90%, 61%);

}
*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    display: grid;
    min-height: 100vh;
    place-items: center;
    line-height: 1.6;
    background: var(--crl-neutral-900);
   
}

.card {
    color: var(--crl-neutral-100);
    background-image: url(img/checkmate-1995121.jpg);
    background-size: cover;
    padding: 10rem 0 0;
    max-width: 35ch;  /* 35 character length wide */
    border-radius: 0.5rem;
    overflow:hidden;
    /* setting the transition delay and style */
    transition: transform 500ms ease;
}
.card:hover,
/* card focus within refers to if the item of  focus is within the card */
.card:focus-within {
    /* scale is for incresing or decreasing size of the item */
    /* note that scaling affects the display quality though negligible */
    transform: scale(1.05) ;
}
.card-content {
    
    /* background: hsl(0, 0%, 0% / 0.5); hsl is an alterntive to rgba ie easier to use but may have browser compatibility issues */
    background: linear-gradient(hsl(0, 0%, 0% / 0),
    hsl(255, 0%, 50% / 0.2) 20%,
    hsl(0, 0%, 0% / 1));
    --padding:1rem;/* local scope css variable, you cant use it outside padding. */
    padding: var(--padding); /*using the variable */
    /* advantage of using the variale css is that it will work always even if we change padding value */
    transform: translateY(65%);
}
.card-content > *:not(.card-title) {
   
   opacity: 0;
   transition: opacity 500ms linear;
   
}
.card:hover .card-content {
    transform: translateY(0);
    transition: transform 500ms ease;
    transition-delay :500ms;; 
}
.card:hover .card-content > * {
    opacity: 1;
    transition: opacity 500ms linear;
    transition-delay: 1000ms;
}

.card-title {
    /* we give position attribute to the title so that the following absolute psition will be in respect to it. */
    position: relative;
    width: max-content;
    /* outline: 1px solid red; shows outline without moving the rest of the objects */
}
.card-title::after {
    /* pseudo elements must have content property to be visible in the dom */
    content: "";
    position: absolute;
    height: 4px;
    width: calc(100% + var(--padding));
    background: var(--crl-accent-400);
    bottom: 0;

    left: calc(var(--padding) * -1);
    transform: scaleX(0);
    transform-origin: left;
    /* or use left*/
    /* transform-origin: 0 50%;  */
    /* origin is the point from which the scale will be applied */
    /* limit your transitions to transformand opacity rather thanwidthto get better prfomsnce/results */
    transition: transform 500ms ease;
}
/* When adding a transform on 2 selector classes */
.card:hover .card-title::after {
    transform: scaleX(1);
}
.card-body {
    color:rgb(255 255 255 / 0.85);
}
.button {
    cursor: pointer;
    border: none;
    display: inline-block;
    color: var(--crl-neutral-900);
    background-color: var(--crl-accent-400);
    text-decoration: none;
    padding: 0.5em 1.25rem;
    border-radius: 0.5rem;
    
}
.button:hover,
.button:focus {
    background-color: var(--crl-neutral-100);

}